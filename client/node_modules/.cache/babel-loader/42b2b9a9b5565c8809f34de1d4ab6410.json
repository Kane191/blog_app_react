{"ast":null,"code":"var _jsxFileName = \"/var/www/html/my_projects/React/blog_app_react/client/src/components/UpdatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport Axios from 'axios';\nimport '../styles/CreatePost.css';\nimport carrot from '../images/carrot.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [postImage, setPostImage] = useState(\"\");\n  const [postImageName, setPostImageName] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const navigate = useNavigate();\n  console.log(id);\n  useEffect(() => {\n    Axios.get(`http://localhost:3002/api/get/${id}`).then(data => {\n      console.log(data);\n      setPost({\n        title: data.data[0].title,\n        img: data.data[0].postImage,\n        post: data.data[0].post,\n        likes: data.data[0].like_count\n      });\n    });\n  }, [id]);\n\n  const submitPost = data => {\n    // append to form data here\n    let formData = new FormData();\n    formData.append('id', id);\n    formData.append('title', title);\n    formData.append('post', post);\n    formData.append('postImage', postImage);\n    formData.append('postImageName', postImageName);\n    console.log(data);\n    Axios.post('http://localhost:3002/api/updatepost', formData); // navigate('/');\n    // {title : title, post : post, postImage: postImage, postImageName : postImageName}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CreatePost row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col fbg \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TOKKI BLOG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Update a \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"POST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: carrot,\n          height: \"60\",\n          className: \"logo_image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col form_r\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"title\", {\n          required: true,\n          maxLength: 50\n        }),\n        className: \"form-control\",\n        placeholder: \"Title\",\n        type: \"text\",\n        value: post.title,\n        id: \"test\",\n        onChange: e => {\n          setTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"Please check the title. Max length is 50 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", { ...register(\"post\", {\n          required: true,\n          maxLength: 1000\n        }),\n        className: \"form-control\",\n        placeholder: \"Body\",\n        value: post.post,\n        onChange: e => {\n          setPost(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), errors.post && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"Please check the post. Max length is 1000 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary \",\n        onClick: handleSubmit(submitPost),\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePost, \"YKpxkf8sDjYmMqZ2dXJ6eWn0zzc=\", false, function () {\n  return [useParams, useForm, useNavigate];\n});\n\n_c = UpdatePost;\nexport default UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/var/www/html/my_projects/React/blog_app_react/client/src/components/UpdatePost.js"],"names":["React","useState","useEffect","useNavigate","useParams","useForm","Axios","carrot","UpdatePost","id","title","setTitle","post","setPost","postImage","setPostImage","postImageName","setPostImageName","register","handleSubmit","formState","errors","navigate","console","log","get","then","data","img","likes","like_count","submitPost","formData","FormData","append","required","maxLength","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAEiB,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAArC,MAAoDhB,OAAO,EAAjE;AACA,QAAMiB,QAAQ,GAAGnB,WAAW,EAA5B;AAEAoB,EAAAA,OAAO,CAACC,GAAR,CAAYf,EAAZ;AAEAP,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,KAAK,CAACmB,GAAN,CAAW,iCAAgChB,EAAG,EAA9C,EAAiDiB,IAAjD,CAAuDC,IAAD,IAAQ;AAC1DJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAd,MAAAA,OAAO,CAAC;AACNH,QAAAA,KAAK,EAAEiB,IAAI,CAACA,IAAL,CAAU,CAAV,EAAajB,KADd;AAENkB,QAAAA,GAAG,EAAED,IAAI,CAACA,IAAL,CAAU,CAAV,EAAab,SAFZ;AAGNF,QAAAA,IAAI,EAAEe,IAAI,CAACA,IAAL,CAAU,CAAV,EAAaf,IAHb;AAINiB,QAAAA,KAAK,EAAEF,IAAI,CAACA,IAAL,CAAU,CAAV,EAAaG;AAJd,OAAD,CAAP;AAMH,KARD;AASH,GAVQ,EAUN,CAACrB,EAAD,CAVM,CAAT;;AAYA,QAAMsB,UAAU,GAAIJ,IAAD,IAAU;AACzB;AACA,QAAIK,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,IAAhB,EAAsBzB,EAAtB;AACAuB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBxB,KAAzB;AACAsB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBtB,IAAxB;AACAoB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BpB,SAA7B;AACAkB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiClB,aAAjC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACArB,IAAAA,KAAK,CAACM,IAAN,CAAW,sCAAX,EAAkDoB,QAAlD,EATyB,CAUzB;AACA;AACH,GAZD;;AAcF,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAA,+CAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,GAAG,EAAC,EAAT;AAAY,UAAA,GAAG,EAAEzB,MAAjB;AAAyB,UAAA,MAAM,EAAC,IAAhC;AAAqC,UAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACQ,sBAAWW,QAAQ,CAAC,OAAD,EAAU;AAAEiB,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAV,CAAnB;AAAiE,QAAA,SAAS,EAAC,cAA3E;AAA0F,QAAA,WAAW,EAAC,OAAtG;AAA8G,QAAA,IAAI,EAAC,MAAnH;AAA0H,QAAA,KAAK,EAAExB,IAAI,CAACF,KAAtI;AAA6I,QAAA,EAAE,EAAC,MAAhJ;AAAuJ,QAAA,QAAQ,EAAG2B,CAAD,IAAK;AAAG1B,UAAAA,QAAQ,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AAA2B;AAApM;AAAA;AAAA;AAAA;AAAA,cADR,EAESlB,MAAM,CAACX,KAAP,iBAAgB;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFzB,eAGQ;AAAA;AAAA;AAAA;AAAA,cAHR,eAKQ,yBAAcQ,QAAQ,CAAC,MAAD,EAAS;AAAEiB,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAT,CAAtB;AAAqE,QAAA,SAAS,EAAC,cAA/E;AAA8F,QAAA,WAAW,EAAC,MAA1G;AAAkH,QAAA,KAAK,EAAExB,IAAI,CAACA,IAA9H;AAAoI,QAAA,QAAQ,EAAGyB,CAAD,IAAK;AAAGxB,UAAAA,OAAO,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAA0B;AAAhL;AAAA;AAAA;AAAA;AAAA,cALR,EAMSlB,MAAM,CAACT,IAAP,iBAAe;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANxB,eAOQ;AAAA;AAAA;AAAA;AAAA,cAPR,eASQ;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAEO,YAAY,CAACY,UAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATR;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA7DD;;GAAMvB,U;UACaJ,S,EAK2CC,O,EACzCF,W;;;KAPfK,U;AA+DN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport Axios from 'axios';\nimport '../styles/CreatePost.css';\nimport carrot from '../images/carrot.png';\n\nconst UpdatePost = () => {\n    const { id } = useParams();\n    const [title, setTitle] = useState(\"\");\n    const [post, setPost] = useState(\"\");\n    const [postImage, setPostImage] = useState(\"\");\n    const [postImageName, setPostImageName] = useState(\"\");\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const navigate = useNavigate();\n\n    console.log(id);\n\n    useEffect(()=>{\n        Axios.get(`http://localhost:3002/api/get/${id}`).then((data)=>{\n            console.log(data)\n            setPost({\n              title: data.data[0].title,\n              img: data.data[0].postImage,\n              post: data.data[0].post,\n              likes: data.data[0].like_count\n            })\n        });\n    }, [id]);\n\n    const submitPost = (data) => {\n        // append to form data here\n        let formData = new FormData();\n        formData.append('id', id);\n        formData.append('title', title);\n        formData.append('post', post);\n        formData.append('postImage', postImage);\n        formData.append('postImageName', postImageName);\n        console.log(data);\n        Axios.post('http://localhost:3002/api/updatepost',formData);\n        // navigate('/');\n        // {title : title, post : post, postImage: postImage, postImageName : postImageName}\n    }\n\n  return (\n    <div className=\"CreatePost row\">\n        <div className=\"col fbg \">\n            <div className=\"form_bg\"></div>\n            <h1>TOKKI BLOG</h1>\n            <div className=\"d-flex\">\n                <p>Update a <span>POST</span></p>\n                <img alt=\"\" src={carrot} height=\"60\" className=\"logo_image\"/>\n            </div>\n        </div>\n\n        <div className=\"col form_r\">\n                <input {...register(\"title\", { required: true, maxLength: 50 })} className=\"form-control\" placeholder=\"Title\" type=\"text\" value={post.title} id=\"test\" onChange={(e)=>{  setTitle(e.target.value)  }} />\n                {errors.title && <p className=\"error\">Please check the title. Max length is 50 characters</p>}\n                <br/>\n\n                <textarea {...register(\"post\", { required: true, maxLength: 1000 })} className=\"form-control\" placeholder=\"Body\"  value={post.post} onChange={(e)=>{  setPost(e.target.value)  }} ></textarea>\n                {errors.post && <p className=\"error\">Please check the post. Max length is 1000 characters</p>}\n                <br/>\n\n                <button className=\"btn btn-primary \" onClick={handleSubmit(submitPost)}>Submit Post</button>\n        </div>           \n    </div>\n  )\n}\n\nexport default UpdatePost"]},"metadata":{},"sourceType":"module"}