{"ast":null,"code":"var _jsxFileName = \"/var/www/html/my_projects/React/blog_app_react/client/src/components/UpdatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport Axios from 'axios';\nimport '../styles/CreatePost.css';\nimport carrot from '../images/carrot.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [post, setPost] = useState(\"\");\n  const [postImage, setPostImage] = useState(\"\");\n  const [postImageName, setPostImageName] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const navigate = useNavigate();\n\n  const saveFile = e => {\n    setPostImage(e.target.files[0]);\n    setPostImageName(e.target.files[0].name);\n    console.log(e.target.files[0]);\n  };\n\n  const submitPost = data => {\n    // append to form data here\n    let formData = new FormData();\n    formData.append('title', title);\n    formData.append('post', post);\n    formData.append('postImage', postImage);\n    formData.append('postImageName', postImageName);\n    console.log(data);\n    Axios.post('http://localhost:3002/api/create', formData);\n    navigate('/'); // {title : title, post : post, postImage: postImage, postImageName : postImageName}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CreatePost row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col fbg \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TOKKI BLOG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Update a \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"POST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: carrot,\n          height: \"60\",\n          className: \"logo_image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col form_r\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"title\", {\n          required: true,\n          maxLength: 50\n        }),\n        className: \"form-control\",\n        placeholder: \"Title\",\n        type: \"text\",\n        onChange: e => {\n          setTitle(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"Please check the title. Max length is 50 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", { ...register(\"post\", {\n          required: true,\n          maxLength: 1000\n        }),\n        className: \"form-control\",\n        placeholder: \"Body\",\n        onChange: e => {\n          setPost(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), errors.post && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"Please check the post. Max length is 1000 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"postImage\", {\n          required: true\n        }),\n        placeholder: \"Select an image\",\n        className: \"form-control\",\n        type: \"file\",\n        id: \"formFile\",\n        onChange: saveFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), errors.postImage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"Please add an image.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary \",\n        onClick: handleSubmit(submitPost),\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePost, \"wVqsPg3fA32m74yvy20YWDeN3Bk=\", false, function () {\n  return [useParams, useForm, useNavigate];\n});\n\n_c = UpdatePost;\nexport default UpdatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["/var/www/html/my_projects/React/blog_app_react/client/src/components/UpdatePost.js"],"names":["React","useState","useNavigate","useParams","useForm","Axios","carrot","UpdatePost","id","title","setTitle","post","setPost","postImage","setPostImage","postImageName","setPostImageName","register","handleSubmit","formState","errors","navigate","saveFile","e","target","files","name","console","log","submitPost","data","formData","FormData","append","required","maxLength","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAEgB,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAArC,MAAoDhB,OAAO,EAAjE;AACA,QAAMiB,QAAQ,GAAGnB,WAAW,EAA5B;;AAEA,QAAMoB,QAAQ,GAAIC,CAAD,IAAO;AACpBT,IAAAA,YAAY,CAACS,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAZ;AACAT,IAAAA,gBAAgB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AACH,GAJD;;AAMA,QAAMI,UAAU,GAAIC,IAAD,IAAU;AACzB;AACA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBxB,KAAzB;AACAsB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBtB,IAAxB;AACAoB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BpB,SAA7B;AACAkB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiClB,aAAjC;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAzB,IAAAA,KAAK,CAACM,IAAN,CAAW,kCAAX,EAA8CoB,QAA9C;AACAV,IAAAA,QAAQ,CAAC,GAAD,CAAR,CATyB,CAUzB;AACH,GAXD;;AAaF,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAA,+CAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,GAAG,EAAC,EAAT;AAAY,UAAA,GAAG,EAAEf,MAAjB;AAAyB,UAAA,MAAM,EAAC,IAAhC;AAAqC,UAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACQ,sBAAWW,QAAQ,CAAC,OAAD,EAAU;AAAEiB,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAV,CAAnB;AAAiE,QAAA,SAAS,EAAC,cAA3E;AAA0F,QAAA,WAAW,EAAC,OAAtG;AAA8G,QAAA,IAAI,EAAC,MAAnH;AAA0H,QAAA,QAAQ,EAAGZ,CAAD,IAAK;AAAGb,UAAAA,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASY,KAAV,CAAR;AAA2B;AAAvK;AAAA;AAAA;AAAA;AAAA,cADR,EAEShB,MAAM,CAACX,KAAP,iBAAgB;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFzB,eAGQ;AAAA;AAAA;AAAA;AAAA,cAHR,eAKQ,yBAAcQ,QAAQ,CAAC,MAAD,EAAS;AAAEiB,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAT,CAAtB;AAAqE,QAAA,SAAS,EAAC,cAA/E;AAA8F,QAAA,WAAW,EAAC,MAA1G;AAAiH,QAAA,QAAQ,EAAGZ,CAAD,IAAK;AAAGX,UAAAA,OAAO,CAACW,CAAC,CAACC,MAAF,CAASY,KAAV,CAAP;AAA0B;AAA7J;AAAA;AAAA;AAAA;AAAA,cALR,EAMShB,MAAM,CAACT,IAAP,iBAAe;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANxB,eAOQ;AAAA;AAAA;AAAA;AAAA,cAPR,eASQ,sBAAWM,QAAQ,CAAC,WAAD,EAAc;AAAEiB,UAAAA,QAAQ,EAAE;AAAZ,SAAd,CAAnB;AAAsD,QAAA,WAAW,EAAC,iBAAlE;AAAoF,QAAA,SAAS,EAAC,cAA9F;AAA6G,QAAA,IAAI,EAAC,MAAlH;AAAyH,QAAA,EAAE,EAAC,UAA5H;AAAuI,QAAA,QAAQ,EAAEZ;AAAjJ;AAAA;AAAA;AAAA;AAAA,cATR,EAUSF,MAAM,CAACP,SAAP,iBAAoB;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAV7B,eAYQ;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAEK,YAAY,CAACW,UAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAxDD;;GAAMtB,U;UACaJ,S,EAM2CC,O,EACzCF,W;;;KARfK,U;AA0DN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport Axios from 'axios';\nimport '../styles/CreatePost.css';\nimport carrot from '../images/carrot.png';\n\nconst UpdatePost = () => {\n    const { id } = useParams();\n    const [title, setTitle] = useState(\"\");\n    const [post, setPost] = useState(\"\");\n    const [postImage, setPostImage] = useState(\"\");\n    \n    const [postImageName, setPostImageName] = useState(\"\");\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const navigate = useNavigate();\n\n    const saveFile = (e) => {\n        setPostImage(e.target.files[0]);\n        setPostImageName(e.target.files[0].name);\n        console.log(e.target.files[0]);\n    }\n\n    const submitPost = (data) => {\n        // append to form data here\n        let formData = new FormData();\n        formData.append('title', title);\n        formData.append('post', post);\n        formData.append('postImage', postImage);\n        formData.append('postImageName', postImageName);\n        console.log(data);\n        Axios.post('http://localhost:3002/api/create',formData);\n        navigate('/');\n        // {title : title, post : post, postImage: postImage, postImageName : postImageName}\n    }\n\n  return (\n    <div className=\"CreatePost row\">\n        <div className=\"col fbg \">\n            <div className=\"form_bg\"></div>\n            <h1>TOKKI BLOG</h1>\n            <div className=\"d-flex\">\n                <p>Update a <span>POST</span></p>\n                <img alt=\"\" src={carrot} height=\"60\" className=\"logo_image\"/>\n            </div>\n        </div>\n\n        <div className=\"col form_r\">\n                <input {...register(\"title\", { required: true, maxLength: 50 })} className=\"form-control\" placeholder=\"Title\" type=\"text\" onChange={(e)=>{  setTitle(e.target.value)  }} />\n                {errors.title && <p className=\"error\">Please check the title. Max length is 50 characters</p>}\n                <br/>\n\n                <textarea {...register(\"post\", { required: true, maxLength: 1000 })} className=\"form-control\" placeholder=\"Body\" onChange={(e)=>{  setPost(e.target.value)  }} ></textarea>\n                {errors.post && <p className=\"error\">Please check the post. Max length is 1000 characters</p>}\n                <br/>\n\n                <input {...register(\"postImage\", { required: true })} placeholder=\"Select an image\" className=\"form-control\" type=\"file\" id=\"formFile\" onChange={saveFile} ></input>\n                {errors.postImage && <p className=\"error\">Please add an image.</p>}\n\n                <button className=\"btn btn-primary \" onClick={handleSubmit(submitPost)}>Submit Post</button>\n        </div>           \n    </div>\n  )\n}\n\nexport default UpdatePost"]},"metadata":{},"sourceType":"module"}